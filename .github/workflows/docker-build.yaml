name: 'docker-build'
on:
  workflow_call:
    inputs:
      matrix:
        description: Docker build matrix
        type: string
        required: true
jobs:
  build-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.matrix) }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
      - name: 'Generate docker metadata (tags, labels)'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}},value=${{ matrix.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ matrix.version }}
            type=semver,pattern={{major}},value=${{ matrix.version }}
            type=sha
      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v1
      - name: 'Set up buildx'
        uses: docker/setup-buildx-action@v1
      - name: 'Login to container registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Prevent image rebuild'
        id: image-exists
        uses: ./.github/actions/docker-image-exists
        with:
          image: ${{ matrix.image }}
          tag: ${{ matrix.version }}
      - name: 'Build and push'
        if: ${{ steps.image-exists.outputs.exists == 'false' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfile
          build-args: |
            NODE_VERSION=18.18
            PNPM_VERSION=8.2.0
            TURBO_VERSION=1.10.0
            NPM_REGISTRY_TOKEN=${{ secrets.GITHUB_TOKEN }}
            APPLICATION_NAME=${{ matrix.application }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
